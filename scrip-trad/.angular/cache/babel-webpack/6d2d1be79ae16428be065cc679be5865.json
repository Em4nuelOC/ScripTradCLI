{"ast":null,"code":"import _asyncToGenerator from \"E:/DAW/2/ScripTrad/ScripTradCLI/scrip-trad/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport FileSystemHandle from './FileSystemHandle.js';\nimport FileSystemWritableFileStream from './FileSystemWritableFileStream.js';\nconst kAdapter = Symbol('adapter');\n\nclass FileSystemFileHandle extends FileSystemHandle {\n  /** @type {FileSystemFileHandle} */\n  [kAdapter];\n\n  constructor(adapter) {\n    super(adapter);\n    this[kAdapter] = adapter;\n  }\n  /**\n   * @param  {Object} [options={}]\n   * @param  {boolean} [options.keepExistingData]\n   * @returns {Promise<FileSystemWritableFileStream>}\n   */\n\n\n  createWritable(options = {}) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return new FileSystemWritableFileStream(yield _this[kAdapter].createWritable(options));\n    })();\n  }\n  /**\n   * @returns {Promise<File>}\n   */\n\n\n  getFile() {\n    return Promise.resolve(this[kAdapter].getFile());\n  }\n\n}\n\nObject.defineProperty(FileSystemFileHandle.prototype, Symbol.toStringTag, {\n  value: 'FileSystemFileHandle',\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nObject.defineProperties(FileSystemFileHandle.prototype, {\n  createWritable: {\n    enumerable: true\n  },\n  getFile: {\n    enumerable: true\n  }\n});\nexport default FileSystemFileHandle;\nexport { FileSystemFileHandle };","map":{"version":3,"sources":["E:/DAW/2/ScripTrad/ScripTradCLI/scrip-trad/node_modules/native-file-system-adapter/src/FileSystemFileHandle.js"],"names":["FileSystemHandle","FileSystemWritableFileStream","kAdapter","Symbol","FileSystemFileHandle","constructor","adapter","createWritable","options","getFile","Promise","resolve","Object","defineProperty","prototype","toStringTag","value","writable","enumerable","configurable","defineProperties"],"mappings":";AAAA,OAAOA,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,4BAAP,MAAyC,mCAAzC;AAEA,MAAMC,QAAQ,GAAGC,MAAM,CAAC,SAAD,CAAvB;;AAEA,MAAMC,oBAAN,SAAmCJ,gBAAnC,CAAoD;AAClD;AACS,GAARE,QAAQ;;AAETG,EAAAA,WAAW,CAAEC,OAAF,EAAW;AACpB,UAAMA,OAAN;AACA,SAAKJ,QAAL,IAAiBI,OAAjB;AACD;AAED;AACF;AACA;AACA;AACA;;;AACQC,EAAAA,cAAc,CAAEC,OAAO,GAAG,EAAZ,EAAgB;AAAA;;AAAA;AAClC,aAAO,IAAIP,4BAAJ,OACC,KAAI,CAACC,QAAD,CAAJ,CAAeK,cAAf,CAA8BC,OAA9B,CADD,CAAP;AADkC;AAInC;AAED;AACF;AACA;;;AACEC,EAAAA,OAAO,GAAI;AACT,WAAOC,OAAO,CAACC,OAAR,CAAgB,KAAKT,QAAL,EAAeO,OAAf,EAAhB,CAAP;AACD;;AAzBiD;;AA4BpDG,MAAM,CAACC,cAAP,CAAsBT,oBAAoB,CAACU,SAA3C,EAAsDX,MAAM,CAACY,WAA7D,EAA0E;AACxEC,EAAAA,KAAK,EAAE,sBADiE;AAExEC,EAAAA,QAAQ,EAAE,KAF8D;AAGxEC,EAAAA,UAAU,EAAE,KAH4D;AAIxEC,EAAAA,YAAY,EAAE;AAJ0D,CAA1E;AAOAP,MAAM,CAACQ,gBAAP,CAAwBhB,oBAAoB,CAACU,SAA7C,EAAwD;AACtDP,EAAAA,cAAc,EAAE;AAAEW,IAAAA,UAAU,EAAE;AAAd,GADsC;AAEtDT,EAAAA,OAAO,EAAE;AAAES,IAAAA,UAAU,EAAE;AAAd;AAF6C,CAAxD;AAKA,eAAed,oBAAf;AACA,SAASA,oBAAT","sourcesContent":["import FileSystemHandle from './FileSystemHandle.js'\nimport FileSystemWritableFileStream from './FileSystemWritableFileStream.js'\n\nconst kAdapter = Symbol('adapter')\n\nclass FileSystemFileHandle extends FileSystemHandle {\n  /** @type {FileSystemFileHandle} */\n  [kAdapter]\n\n  constructor (adapter) {\n    super(adapter)\n    this[kAdapter] = adapter\n  }\n\n  /**\n   * @param  {Object} [options={}]\n   * @param  {boolean} [options.keepExistingData]\n   * @returns {Promise<FileSystemWritableFileStream>}\n   */\n  async createWritable (options = {}) {\n    return new FileSystemWritableFileStream(\n      await this[kAdapter].createWritable(options)\n    )\n  }\n\n  /**\n   * @returns {Promise<File>}\n   */\n  getFile () {\n    return Promise.resolve(this[kAdapter].getFile())\n  }\n}\n\nObject.defineProperty(FileSystemFileHandle.prototype, Symbol.toStringTag, {\n  value: 'FileSystemFileHandle',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\nObject.defineProperties(FileSystemFileHandle.prototype, {\n  createWritable: { enumerable: true },\n  getFile: { enumerable: true }\n})\n\nexport default FileSystemFileHandle\nexport { FileSystemFileHandle }\n"]},"metadata":{},"sourceType":"module"}