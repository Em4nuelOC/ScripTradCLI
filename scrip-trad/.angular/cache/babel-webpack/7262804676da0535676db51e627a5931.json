{"ast":null,"code":"import _asyncToGenerator from \"E:/DAW/2/ScripTrad/ScripTradCLI/scrip-trad/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/** @typedef {import('./FileSystemDirectoryHandle.js').default} FileSystemDirectoryHandle */\nif (globalThis.DataTransferItem && !DataTransferItem.prototype.getAsFileSystemHandle) {\n  DataTransferItem.prototype.getAsFileSystemHandle = /*#__PURE__*/_asyncToGenerator(function* () {\n    const entry = this.webkitGetAsEntry();\n    const [{\n      FileHandle,\n      FolderHandle\n    }, {\n      FileSystemDirectoryHandle\n    }, {\n      FileSystemFileHandle\n    }] = yield Promise.all([import('./adapters/sandbox.js'), import('./FileSystemDirectoryHandle.js'), import('./FileSystemFileHandle.js')]);\n    return entry.isFile ? new FileSystemFileHandle(new FileHandle(entry, false)) : new FileSystemDirectoryHandle(new FolderHandle(entry, false));\n  });\n}\n/**\n * @param {object=} driver\n * @return {Promise<FileSystemDirectoryHandle>}\n */\n\n\nfunction getOriginPrivateDirectory(_x) {\n  return _getOriginPrivateDirectory.apply(this, arguments);\n}\n\nfunction _getOriginPrivateDirectory() {\n  _getOriginPrivateDirectory = _asyncToGenerator(function* (driver, options = {}) {\n    if (typeof DataTransfer === 'function' && driver instanceof DataTransfer) {\n      console.warn('deprecated getOriginPrivateDirectory(dataTransfer). Use \"dt.items.getAsFileSystemHandle()\"');\n      const entries = Array.from(driver.items).map(item => item.webkitGetAsEntry());\n      return import('./util.js').then(m => m.fromDataTransfer(entries));\n    }\n\n    if (!driver) {\n      return globalThis.navigator?.storage?.getDirectory() || globalThis.getOriginPrivateDirectory();\n    }\n\n    const {\n      FileSystemDirectoryHandle\n    } = yield import('./FileSystemDirectoryHandle.js');\n    const module = yield driver;\n    const sandbox = module.default ? yield module.default(options) : module(options);\n    return new FileSystemDirectoryHandle(sandbox);\n  });\n  return _getOriginPrivateDirectory.apply(this, arguments);\n}\n\nexport default getOriginPrivateDirectory;","map":{"version":3,"sources":["E:/DAW/2/ScripTrad/ScripTradCLI/scrip-trad/node_modules/native-file-system-adapter/src/getOriginPrivateDirectory.js"],"names":["globalThis","DataTransferItem","prototype","getAsFileSystemHandle","entry","webkitGetAsEntry","FileHandle","FolderHandle","FileSystemDirectoryHandle","FileSystemFileHandle","Promise","all","isFile","getOriginPrivateDirectory","driver","options","DataTransfer","console","warn","entries","Array","from","items","map","item","then","m","fromDataTransfer","navigator","storage","getDirectory","module","sandbox","default"],"mappings":";;AAAA;AAEA,IAAIA,UAAU,CAACC,gBAAX,IAA+B,CAACA,gBAAgB,CAACC,SAAjB,CAA2BC,qBAA/D,EAAsF;AACpFF,EAAAA,gBAAgB,CAACC,SAAjB,CAA2BC,qBAA3B,kCAAmD,aAAkB;AACnE,UAAMC,KAAK,GAAG,KAAKC,gBAAL,EAAd;AACA,UAAM,CACJ;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KADI,EAEJ;AAAEC,MAAAA;AAAF,KAFI,EAGJ;AAAEC,MAAAA;AAAF,KAHI,UAIIC,OAAO,CAACC,GAAR,CAAY,CACpB,OAAO,uBAAP,CADoB,EAEpB,OAAO,gCAAP,CAFoB,EAGpB,OAAO,2BAAP,CAHoB,CAAZ,CAJV;AAUA,WAAOP,KAAK,CAACQ,MAAN,GACH,IAAIH,oBAAJ,CAAyB,IAAIH,UAAJ,CAAeF,KAAf,EAAsB,KAAtB,CAAzB,CADG,GAEH,IAAII,yBAAJ,CAA8B,IAAID,YAAJ,CAAiBH,KAAjB,EAAwB,KAAxB,CAA9B,CAFJ;AAGD,GAfD;AAgBD;AAED;AACA;AACA;AACA;;;SACeS,yB;;;;;iDAAf,WAA0CC,MAA1C,EAAkDC,OAAO,GAAG,EAA5D,EAAgE;AAC9D,QAAI,OAAOC,YAAP,KAAwB,UAAxB,IAAsCF,MAAM,YAAYE,YAA5D,EAA0E;AACxEC,MAAAA,OAAO,CAACC,IAAR,CAAa,4FAAb;AACA,YAAMC,OAAO,GAAGC,KAAK,CAACC,IAAN,CAAWP,MAAM,CAACQ,KAAlB,EAAyBC,GAAzB,CAA6BC,IAAI,IAAIA,IAAI,CAACnB,gBAAL,EAArC,CAAhB;AACA,aAAO,OAAO,WAAP,EAAoBoB,IAApB,CAAyBC,CAAC,IAAIA,CAAC,CAACC,gBAAF,CAAmBR,OAAnB,CAA9B,CAAP;AACD;;AACD,QAAI,CAACL,MAAL,EAAa;AACX,aAAOd,UAAU,CAAC4B,SAAX,EAAsBC,OAAtB,EAA+BC,YAA/B,MAAiD9B,UAAU,CAACa,yBAAX,EAAxD;AACD;;AACD,UAAM;AAACL,MAAAA;AAAD,cAAoC,OAAO,gCAAP,CAA1C;AACA,UAAMuB,MAAM,SAASjB,MAArB;AACA,UAAMkB,OAAO,GAAGD,MAAM,CAACE,OAAP,SAAuBF,MAAM,CAACE,OAAP,CAAelB,OAAf,CAAvB,GAAiDgB,MAAM,CAAChB,OAAD,CAAvE;AACA,WAAO,IAAIP,yBAAJ,CAA8BwB,OAA9B,CAAP;AACD,G;;;;AAED,eAAenB,yBAAf","sourcesContent":["/** @typedef {import('./FileSystemDirectoryHandle.js').default} FileSystemDirectoryHandle */\n\nif (globalThis.DataTransferItem && !DataTransferItem.prototype.getAsFileSystemHandle) {\n  DataTransferItem.prototype.getAsFileSystemHandle = async function () {\n    const entry = this.webkitGetAsEntry()\n    const [\n      { FileHandle, FolderHandle },\n      { FileSystemDirectoryHandle },\n      { FileSystemFileHandle }\n    ] = await Promise.all([\n      import('./adapters/sandbox.js'),\n      import('./FileSystemDirectoryHandle.js'),\n      import('./FileSystemFileHandle.js')\n    ])\n\n    return entry.isFile\n      ? new FileSystemFileHandle(new FileHandle(entry, false))\n      : new FileSystemDirectoryHandle(new FolderHandle(entry, false))\n  }\n}\n\n/**\n * @param {object=} driver\n * @return {Promise<FileSystemDirectoryHandle>}\n */\nasync function getOriginPrivateDirectory (driver, options = {}) {\n  if (typeof DataTransfer === 'function' && driver instanceof DataTransfer) {\n    console.warn('deprecated getOriginPrivateDirectory(dataTransfer). Use \"dt.items.getAsFileSystemHandle()\"')\n    const entries = Array.from(driver.items).map(item => item.webkitGetAsEntry())\n    return import('./util.js').then(m => m.fromDataTransfer(entries))\n  }\n  if (!driver) {\n    return globalThis.navigator?.storage?.getDirectory() || globalThis.getOriginPrivateDirectory()\n  }\n  const {FileSystemDirectoryHandle} = await import('./FileSystemDirectoryHandle.js')\n  const module = await driver\n  const sandbox = module.default ? await module.default(options) : module(options)\n  return new FileSystemDirectoryHandle(sandbox)\n}\n\nexport default getOriginPrivateDirectory\n"]},"metadata":{},"sourceType":"module"}