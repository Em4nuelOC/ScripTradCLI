{"ast":null,"code":"import _asyncToGenerator from \"E:/DAW/2/ScripTrad/ScripTradCLI/scrip-trad/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/** @typedef {import('./FileSystemDirectoryHandle.js').default} FileSystemDirectoryHandle */\nconst native = globalThis.showDirectoryPicker;\n/**\n * @param {Object} [options]\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @returns {Promise<FileSystemDirectoryHandle>}\n */\n\nfunction showDirectoryPicker() {\n  return _showDirectoryPicker.apply(this, arguments);\n}\n\nfunction _showDirectoryPicker() {\n  _showDirectoryPicker = _asyncToGenerator(function* (options = {}) {\n    if (native && !options._preferPolyfill) {\n      return native(options);\n    }\n\n    const input = document.createElement('input');\n    input.type = 'file'; // Even with this check, the browser may support the attribute, but not the functionality (e.g. iOS Safari)\n\n    if (!('webkitdirectory' in input)) {\n      throw new Error(`HTMLInputElement.webkitdirectory is not supported`);\n    } // See https://stackoverflow.com/questions/47664777/javascript-file-input-onchange-not-working-ios-safari-only\n\n\n    input.style.position = 'fixed';\n    input.style.top = '-100000px';\n    input.style.left = '-100000px';\n    document.body.appendChild(input);\n    input.webkitdirectory = true; // Lazy load while the user is choosing the directory\n\n    const p = import('./util.js');\n    yield new Promise(resolve => {\n      input.addEventListener('change', resolve);\n      input.click();\n    });\n    return p.then(mod => mod.getDirHandlesFromInput(input));\n  });\n  return _showDirectoryPicker.apply(this, arguments);\n}\n\nexport default showDirectoryPicker;\nexport { showDirectoryPicker };","map":{"version":3,"sources":["E:/DAW/2/ScripTrad/ScripTradCLI/scrip-trad/node_modules/native-file-system-adapter/src/showDirectoryPicker.js"],"names":["native","globalThis","showDirectoryPicker","options","_preferPolyfill","input","document","createElement","type","Error","style","position","top","left","body","appendChild","webkitdirectory","p","Promise","resolve","addEventListener","click","then","mod","getDirHandlesFromInput"],"mappings":";;AAAA;AAEA,MAAMA,MAAM,GAAGC,UAAU,CAACC,mBAA1B;AAEA;AACA;AACA;AACA;AACA;;SACeA,mB;;;;;2CAAf,WAAoCC,OAAO,GAAG,EAA9C,EAAkD;AAChD,QAAIH,MAAM,IAAI,CAACG,OAAO,CAACC,eAAvB,EAAwC;AACtC,aAAOJ,MAAM,CAACG,OAAD,CAAb;AACD;;AAED,UAAME,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACAF,IAAAA,KAAK,CAACG,IAAN,GAAa,MAAb,CANgD,CAQhD;;AACA,QAAI,EAAE,qBAAqBH,KAAvB,CAAJ,EAAmC;AACjC,YAAM,IAAII,KAAJ,CAAW,mDAAX,CAAN;AACD,KAX+C,CAahD;;;AACAJ,IAAAA,KAAK,CAACK,KAAN,CAAYC,QAAZ,GAAuB,OAAvB;AACAN,IAAAA,KAAK,CAACK,KAAN,CAAYE,GAAZ,GAAkB,WAAlB;AACAP,IAAAA,KAAK,CAACK,KAAN,CAAYG,IAAZ,GAAmB,WAAnB;AACAP,IAAAA,QAAQ,CAACQ,IAAT,CAAcC,WAAd,CAA0BV,KAA1B;AAEAA,IAAAA,KAAK,CAACW,eAAN,GAAwB,IAAxB,CAnBgD,CAqBhD;;AACA,UAAMC,CAAC,GAAG,OAAO,WAAP,CAAV;AAEA,UAAM,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC3Bd,MAAAA,KAAK,CAACe,gBAAN,CAAuB,QAAvB,EAAiCD,OAAjC;AACAd,MAAAA,KAAK,CAACgB,KAAN;AACD,KAHK,CAAN;AAKA,WAAOJ,CAAC,CAACK,IAAF,CAAOC,GAAG,IAAIA,GAAG,CAACC,sBAAJ,CAA2BnB,KAA3B,CAAd,CAAP;AACD,G;;;;AAED,eAAeH,mBAAf;AACA,SAASA,mBAAT","sourcesContent":["/** @typedef {import('./FileSystemDirectoryHandle.js').default} FileSystemDirectoryHandle */\n\nconst native = globalThis.showDirectoryPicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @returns {Promise<FileSystemDirectoryHandle>}\n */\nasync function showDirectoryPicker (options = {}) {\n  if (native && !options._preferPolyfill) {\n    return native(options)\n  }\n\n  const input = document.createElement('input')\n  input.type = 'file'\n\n  // Even with this check, the browser may support the attribute, but not the functionality (e.g. iOS Safari)\n  if (!('webkitdirectory' in input)) {\n    throw new Error(`HTMLInputElement.webkitdirectory is not supported`)\n  }\n\n  // See https://stackoverflow.com/questions/47664777/javascript-file-input-onchange-not-working-ios-safari-only\n  input.style.position = 'fixed'\n  input.style.top = '-100000px'\n  input.style.left = '-100000px'\n  document.body.appendChild(input)\n\n  input.webkitdirectory = true\n\n  // Lazy load while the user is choosing the directory\n  const p = import('./util.js')\n\n  await new Promise(resolve => {\n    input.addEventListener('change', resolve)\n    input.click()\n  })\n\n  return p.then(mod => mod.getDirHandlesFromInput(input))\n}\n\nexport default showDirectoryPicker\nexport { showDirectoryPicker }\n"]},"metadata":{},"sourceType":"module"}